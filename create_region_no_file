#!/usr/bin/env python

from __future__ import absolute_import, division, print_function
import argparse
from limited_area.limited_area import LimitedArea

if __name__ == "__main__":
    description = ("Create a limited area MPAS grid from a global MPAS grid"
                   " and a file that specifies the regional area boundary.")

    epilog = ("For more information please see: "
             "https://github.com/MiCurry/MPAS-Limited-Area")


    parser = argparse.ArgumentParser(description=description,
                                     epilog=epilog)


    parser.add_argument('--points', default=None,
                        help='Points file specifying the MPAS regional area',
                        type=str)

    parser.add_argument('grid',
                        help=('Global MPAS grid file. Either a grid.nc or'
                              ' static.nc file'),
                        type=str)

    parser.add_argument('-v', '--verbose',
                         help='Turn on verbose setting 0-5',
                         type=int,
                         default=0)

    args, unknown = parser.parse_known_args()
    print(args)

    new_args = {}
    for st in unknown:
        k, v = st.split(':')
        new_args[k] = v
    print(new_args)

    DEBUG = args.verbose
    if  DEBUG > 0:
        print("DEBUG: DEBUG set to verbose level ", DEBUG, '\n')

    if DEBUG > 1:
        print("DEBUG: Grid File: ", args.grid)
        print("DEBUG: Points File: ", args.points)


    kwargs = { 'DEBUG' : DEBUG , **new_args}

    print(kwargs)

    regional_area = LimitedArea(args.grid,
                                None,
                                format='NETCDF3_64BIT_OFFSET',
                                **kwargs)

    regional_area.gen_region(**kwargs)


    if DEBUG > 0:
        print("DEBUG: Limited Area Creation Finished")



